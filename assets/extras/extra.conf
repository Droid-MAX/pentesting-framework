#!/bin/bash

export eRAWLINK=https://gitlab.com/abhackerofficial/psf-extramodule/-/raw/main
export RAWLINK=https://raw.githubusercontent.com/abhackerofficial/pentesting-framework/master
export eGITLINK=https://gitlab.com/abhackerofficial/psf-extramodule
DIR="${POSTDIR}/psf-extramodule"
PDIR="${POSTDIR}/psf-extramodule/programs"
MDIR="${POSTDIR}/psf-extramodule/modules"

info()
{
:
}

checkNET()
{
if [[ $NET == "off" ]]
then
echo -e "This module Required \e[94mInternet Connection\e[0m to Start!"
exit 1
fi
}

readINPUTe() {
if [[ ${input} == "list" ]]
 then
    $1

elif [[ ${input} =~ ^-?[0-9]*[.,]?[0-9]*[eE]?-?[0-9]+$ ]]
   then
    if [[ ${input} -lt $2 ]]
    then
    if [[ ! $__return__ == 105 ]];then
    source ${PDIR}/${3}
    else
    cd $TMPDIR || exit 1
    printf "${b0SIGN} Downloading Program...   \r"
    source <(curl -sLo- "${eRAWLINK}/programs/$3")
fi
fi
fi
     theERROR
     extarnalCMD
}


readINPUTSe() {
if [[ $input == "$1" ]]
  then
     input=""
   if [[ ! $__return__ == 105 ]];then
    $2 ${PDIR}/$3
   else
   cd $TMPDIR || exit 1
   printf "${b0SIGN} Downloading Program...\r"
   blank
   $2 <(curl -sLo- "${eRAWLINK}/programs/$3")
fi
fi
    theERROR
    extarnalCMD
}


extra()
{
ARG1=$1
printf "use :${1}/handler"
}

extraMODULES=(
    "$(extra phish/otpweb)"
    "$(extra phish/notpweb)"
    "$(extra phish/camweb)"
    "$(extra phish/micweb)"
    "$(extra phish/gpsweb)"
)

#if [[ ${command} == ${LSMODULES} ]] && [[ ${#command} -gt 0 ]] && [[ ${#LSMODULES} -gt 0 ]]
#then
#echo "Ok"
#fi


if [[ ! $__return__ == 105  ]]
then
for i in "${extraMODULES[@]}"
do
  KEY=$(printf "%02d" $NUM)
  LOOP=$((${LOOP:-0}+1))
  LSMODULES=${i::$((${#i}))}
if [[ ${command} == ${LSMODULES} ]]
then
if [[ ! -d ${DIR} ]]
  then
  printf "Extra Module Files Not Found Need to Download.\n"
  read -sp "Press Enter to Start Downloading."
  cd ${POSTDIR}
  git clone ${eGITLINK}
  cd - &> /dev/null
fi
  break
fi
  ((NUM++))
done
fi

 if [[ ${command} == "$(msnum 1 1 @)" ]]
  then
    sname=otpweb
    checkNET
    description "${sname}" "$(msnum 1 1 ~~)" "yes"
     echo -e "${b0SIGN} $(msnum 1 1 :)"
     BUNDLE()
     {
       readINPUTe "list 1 1" "31" "PHISH/configure.conf"
     }
   writeCONFIGURE 1 1

elif [[ ${command} == "$(msnum 1 2 @)" ]]
  then
    sname=notpweb
    checkNET
     description "${sname}" "$(msnum 1 2 ~~)" "yes"
     echo -e "${b0SIGN} $(msnum 1 2 :)"
     BUNDLE()
     {
       readINPUTe "list 1 2" "31" "PHISH/configure.conf"
     }
   writeCONFIGURE 1 2

elif [[ ${command} == "$(msnum 1 3 @)" ]]
  then
    sname=gpsweb
    checkNET
    description "gpsweb" "$(msnum 1 3 ~~)" "yes"
     echo -e "${b0SIGN} $(msnum 1 3 :)"
     BUNDLE()
     {
       readINPUTe "list 1 3" "5" "PHISH/configure.conf"
     }
   writeCONFIGURE 1 3

elif [[ ${command} == "$(msnum 1 4 @)" ]]
  then
    sname=camweb
    checkNET
     description "camweb" "$(msnum 1 4 ~~)" "yes"
     echo -e "${b0SIGN} $(msnum 1 4 :)"
     BUNDLE()
     {
       readINPUTe "list 1 4" "5" "PHISH/configure.conf"
     }
   writeCONFIGURE 1 4

elif [[ ${command} == "$(msnum 1 5 @)" ]]
  then
    sname=micweb
    checkNET
     description "${sname}" "$(msnum 1 5 ~~)" "yes"
     echo -e "${b0SIGN} $(msnum 1 5 :)"
     BUNDLE()
     {
       readLIST "list 1 5"
       readINPUTSe "run" "source" "PHISH/configure.conf"
     }
   writeCONFIGURE 1 5

fi

abc()
{
if [[ ${command}  == "$(extra phish/otpweb)" ]]
then
list 1 1
while true
do
read -r -p "${R4}psf${R0} use(${C1}program/phish/otpweb${R0}) > " input
readINPUT "list 1 1" 31 "OTPWEB/otpweb"
done
elif [[ ${command} == "$(extra phish/notpweb)" ]]
then
LIMIT=30
list 1 2
read -r -p "${R4}psf${R0} use(${C1}program/phish/notpweb${R0}) > " input
readINPUT "list 1 1" 31 "NOTPWEB/notpweb"

fi
}
